// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(BANK)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UMKMUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  noTelepon String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi satu-satu dengan data UMKM
  umkm UMKM? // Opsional, karena mungkin user belum membuat data UMKM
  // Relasi ke Loan Applications (sebagai pemohon)
  // loanApplications LoanApplication[]
  // Jika diperlukan, relasi ke SRLAssessment
  // srlAssessments   SRLAssessment?
}

model UMKM {
  id                  String          @id @default(cuid())
  name                String
  alamat              String
  rt_rw               String
  desa_kel            String
  kecamatan           String
  kabupaten           String
  provinsi            String
  tahunBerdiri        Int
  usahaUtama          JenisUsaha
  produkUtama         String
  badanHukum          NamaBadanHukum
  jumlahKaryawan      Int
  sistemPenjualan     SistemPenjualan
  persaingan          Saingan
  totalAset           Float
  penjualanPerTahun   Float
  proyeksiPenjualan   Float
  nilaiAsetJaminan    Float
  jumlahDokumenKredit Float
  description         String
  noRekening          String
  noNPWP              String
  noNIB               String
  userId              String          @unique
  user                UMKMUser        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt

  // Relasi ke aplikasi pinjaman
  loanApplications LoanApplication[]
  srlAssessments   SRLAssessment?
}

model LoanApplication {
  id             String      @id @default(cuid())
  jumlahPinjaman Float
  tujuan         String
  status         LoanStatus  @default(PENDING)
  // Relasi ke data UMKM
  umkmId         String
  umkm           UMKM        @relation(fields: [umkmId], references: [id], onDelete: Cascade)

  mlDecision     MlDecision?
  tanggalKeputusan DateTime?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  // userId String
  // user   UMKMUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SRLAssessment {
  id        String   @id @default(cuid())
  // userId            String   @unique
  // user              UMKMUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  umkmId    String   @unique
  umkm      UMKM     @relation(fields: [umkmId], references: [id], onDelete: Cascade)
  // lamaUsahaBerjalan Int
  // jumlahKaryawan    Int
  // omzetPerTahun     Float
  // jumlahAset        Float
  score     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
}

enum MlDecision {
  APPROVED
  REJECTED
}

enum Role {
  USER
  SYSTEM
  BANK
}

enum Saingan {
  RENDAH
  SEDANG
  TINGGI
}

enum NamaBadanHukum {
  PERSEORANGAN
  CV
}

enum SistemPenjualan {
  RETAIL
  DISTRIBUTOR
  RETAILDANDISTRIBUTOR
}

enum JenisUsaha {
  MAKANAN
  PAKAIAN
  KERAJINAN
}
